{"type":"entity","name":"Memory Bank Optimization System","entityType":"System","observations":["Hierarchical rule loading system for optimized token usage","Batch verification workflow using platform-specific commands","Progressive documentation approach for different complexity levels","Context preservation during mode transitions","Differential Memory Bank updates to minimize file operations","Template initialization with error handling","One-pass verification for directory structure","Platform adaptation with auto-detection and command optimization","Entity-relationship format in memory.json for knowledge graph","Structured directory system with active-context, system-patterns, creative-phase, implementation, archive","Mandatory workflow: READ memory.json → UPDATE context → REFERENCE patterns → RECORD decisions → FOLLOW standards → ARCHIVE work"]}
{"type":"entity","name":"ng-alain Project","entityType":"Project","observations":["Angular 20.3.0 + ng-alain 20.0.2 admin panel framework","ng-zorro-antd 20.3.1 UI component library","Windows PowerShell development environment","Yarn 4.9.2 package manager","High memory allocation build configuration (8GB)","ESLint + Stylelint + Prettier code quality tools","Jasmine + Karma + Protractor testing framework","ng-alain-plugin-theme for dynamic theming","Complete admin panel scaffold with authentication and authorization"]}
{"type":"entity","name":"VAN Mode System","entityType":"Mode","observations":["Initialization and entry point for Memory Bank system","Platform detection with Windows PowerShell adaptation","File verification with batch operations","Complexity determination for task classification","Level 1 Quick Bug Fix workflow support","Memory Bank structure creation and validation","Technical context documentation and preservation"]}
{"type":"entity","name":"VAN File Verification System","entityType":"Subsystem","observations":["Critical Memory Bank verification as first step","Batch directory creation with platform-specific commands","Template initialization with error handling","One-pass verification for directory structure","Platform adaptation with auto-detection","Memory Bank completeness validation","Essential file structure verification"]}
{"type":"entity","name":"VAN Platform Detection System","entityType":"Subsystem","observations":["Windows PowerShell environment detection","Path separator format confirmation (backslash)","Command adaptations for Windows platform","Platform-specific optimization for batch operations","Environment variable and shell detection","Working directory validation"]}
{"type":"entity","name":"VAN Complexity Determination System","entityType":"Subsystem","observations":["Task analysis for complexity level classification","Level 1 Quick Bug Fix identification","Scope assessment and risk evaluation","Time estimation and dependency mapping","Mode transition triggers for higher complexity levels","Decision tree workflow for complexity assessment"]}
{"type":"entity","name":"Angular Architecture Decisions","entityType":"Architecture","observations":["Standalone Components: 100% adoption removing NgModule complexity","Service-based State Management: Using Angular services with RxJS instead of NgRx","Hash Routing: Simplified deployment without server configuration","Lazy Loading Strategy: All feature modules use lazy loading for optimal bundle splitting","Functional Guards: Using CanActivateFn instead of class-based guards","Dependency Injection: Preferring inject() function over constructor DI","Change Detection: OnPush strategy enforced for optimal performance","Native Control Flow: Using @if, @for, @switch instead of structural directives","TypeScript Strict Mode: Maximum type safety enabled","Path Alias System: TypeScript path mapping for cleaner imports","Mock-First Development: Using @delon/mock for parallel development","URL as State: Leveraging router state for application state","Grid Layout: CSS Grid for responsive card-based layouts","Template Organization: Inline for <150 lines, external for complex components"]}
{"type":"entity","name":"ng-alain Development Patterns","entityType":"Pattern","observations":["ST (Simple Table): Data table with built-in features","SE (Search Engine): Advanced search and filtering","ACL Integration: Role-based access control","Theme Integration: Dynamic theming support","Schema-driven Forms: JSON schema form generation","Validation Patterns: Built-in and custom validators","Dynamic Forms: Runtime form generation","Form State Management: Reactive form patterns","Responsive Layout: Mobile-first design approach","Sidebar Navigation: Collapsible navigation","Breadcrumb Navigation: Hierarchical navigation","Header Actions: Toolbar and action buttons","@delon/theme _HttpClient: Unified error handling and loading states","Less Preprocessor: Seamless integration with ng-zorro-antd theming"]}
{"type":"relation","from":"VAN Mode System","to":"VAN File Verification System","relationType":"INCLUDES"}
{"type":"relation","from":"VAN Mode System","to":"VAN Platform Detection System","relationType":"INCLUDES"}
{"type":"relation","from":"VAN Mode System","to":"VAN Complexity Determination System","relationType":"INCLUDES"}
{"type":"relation","from":"ng-alain Project","to":"Memory Bank Optimization System","relationType":"USES"}
{"type":"relation","from":"Memory Bank Optimization System","to":"VAN Mode System","relationType":"MANAGES"}
{"type":"relation","from":"ng-alain Project","to":"Angular Architecture Decisions","relationType":"IMPLEMENTS"}
{"type":"relation","from":"ng-alain Project","to":"ng-alain Development Patterns","relationType":"USES"}
{"type":"relation","from":"Angular Architecture Decisions","to":"ng-alain Development Patterns","relationType":"GUIDES"}
{"type":"entity","name":"Memory Bank Usage Guide","entityType":"Documentation","observations":["Complete usage guide for Memory Bank system","Step-by-step workflow instructions","Directory structure explanation","Quick reference commands","Maintenance and troubleshooting guide","Integration with .cursorrules configuration","Entity-relationship format examples","Regular maintenance procedures"]}
{"type":"relation","from":"Memory Bank Optimization System","to":"Memory Bank Usage Guide","relationType":"INCLUDES"}
