---
description: Memory MCP 知識圖譜管理配置
globs: "*"
alwaysApply: true
server: memory
---

[🏠 INDEX](./rules/INDEX.mdc)

# Memory 知識圖譜配置

## 互動流程

### 1️⃣ 使用者識別
- 預設使用者：`default_user`
- 首次互動時主動識別使用者

### 2️⃣ 記憶提取
- 每次對話開始用「記得...」開頭
- 從知識圖譜提取相關資訊
- 統一稱呼知識圖譜為「記憶」(memory)

### 3️⃣ 實體類型定義

| 實體類型 | entityType | 用途 | 範例 |
|---------|-----------|------|------|
| 使用者需求 | userRequirements | 記錄使用者主動提出的需求 | 實作使用者登入功能 |
| 確認點 | confirmationPoint | 儲存使用者明確同意的內容 | 確認使用 JWT 認證 |
| 拒絕記錄 | rejectionRecord | 記錄使用者否決的選項 | 拒絕使用 localStorage 儲存 token |
| 程式碼片段 | codeSnippet | 儲存使用者接受的產生結果 | auth.service.ts 實作 |
| 對話階段 | session | 一次對話階段 | 2025-10-07 登入功能討論 |
| 使用者 | user | 使用者資訊 | default_user |

### 4️⃣ 關係類型定義

| 關係類型 | from | to | 範例 |
|---------|------|-----|------|
| HAS_REQUIREMENT | session | userRequirements | 階段 A 包含「使用者登入需支援第三方授權」需求 |
| CONFIRMS | user | confirmationPoint | 使用者確認「後端 API 格式為 { code, data }」 |
| REJECTS | user | rejectionRecord | 使用者拒絕「使用 any 型別」，原因是需要嚴格型別檢查 |
| LINKS_TO | userRequirements | codeSnippet | 需求「實作登入功能」連結到 auth.ts 檔案 |

### 5️⃣ 記憶更新機制
每次互動收集到新資訊時：
1. 建立實體（需求、確認、拒絕、程式碼）
2. 建立關係（連結到當前階段）
3. 儲存觀測（記錄相關事實）

## 自動同步
✅ 所有更新自動同步至 `memory-bank/memory.json`

---

**重要：** 遵循此規則以確保知識持續累積和可追溯性
